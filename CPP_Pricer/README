PROJET FINANCE: CONCEPTION ET IMPLEMENTATION D'UN PRICER MONTE-CARLO GENERIQUE EN C++
Equipe 11:

Le sujet à été effectué dans la totalité. Aucun bug n'est présent. Une fuite mémoire est présente au niveau du parser. Celle-ci est de taille constante (446 bytes).
Le dossier doc/ contient toutes les informations necéssaires à la documentation doxygen.
Le dossier src/ contient l'ensemble des fichier .cpp et .h ainsi que des tests et des données graphiques. Les commandes pour éxécuter les tests seront expliqués.

Equipe_11/:
  AUTHORS:
	fichier contenant la liste des membres de l'équipe.

  Makefile:
	Les commandes du makefile sont les suivantes:
	-make all:
	  appel "make all" dans le dossier src. Créer 5 exécutables pricer, pricert, delta, couv, test-parser (ils seront expliqués plus tard).
	-make docs:
	  permet de générer un document Doxygen en html présent dans le dossier doc/html/. A lire à l'aide d'un navigateur internet à partir de la page doc/html/index.html
	-make clean:
	  appel "make clean" dans le dossier src. Supprime les fichiers avec les extensions suivantes: .o, .lo, .libs contenus dans le dossiers src/ ainsi que sur les dossiers que src/ contient.
	-make reaclean:
	  appel "make clean" dans le dossier src et supprime les 5 exécutables présents dans src/. Supprime également le dossier doc/html/ généré à l'aide de la commande "make doc"
	-make check:
	  exécute les scripts de test contenus dans dans src/: test_parser.sh, test_pricer.sh, test_delta.sh

doc/:
  doxyfilerc:
	fichier contenant les informations nécessaires à la documentation doxygen

  Makefile:
	Les commandes du makefile sont les suivantes:
	-make docs:
	  générer un document Doxygen en html présent dans le dossier courant. A lire à l'aide d'un navigateur internet à partir de la pagne html/index.html

src/:
  Makefile:
	Le makefile utilisé est celui nécessaire à la compilation de la bibliotèque PNL. La compilation utilise le dossier build/ présent dans /home/perms/lelong/.
	Les commandes du makefiles sont les suivantes:
	-make all:
	  Créer 5 exécutables pricer, pricert, delta, couv, test-parser.
	-make clean:
	  Supprime les fichiers avec les extensions suivantes: .o, .lo, .libs contenus dans le dossiers src/ ainsi que sur les dossiers que src/ contient.

  asian.cpp:
	Fichier d'implémentation pour la classe Asian (classe fille de Option) représentant l'option asiatique discrète en dimension 1.
  asian.h:
	Fichier header de la classe Asian.

  basket.cpp:
	Fichier d'implémentation pour la classe Basket (classe fille de Option) représentant l'option panier.
  basket.h:
	Fichier header de la classe Basket.

  barrier_l.cpp:
	Fichier d'implémentation pour la classe Barrier_l (classe fille de Option) représentant l'option barrière basse.
  barrier_u.h:
	Fichier header de la classe Barrier_l.

  barrier_u.cpp:
	Fichier d'implémentation pour la classe Barrier_u (classe fille de Option) représentant l'option barrière haute.
  barrier_u.h:
	Fichier header de la classe Barrier_u.

  barrier.cpp:
	Fichier d'implémentation pour la classe Barrier (classe fille de Option) représentant l'option barrière.
  barrier.h:
	Fichier header de la classe Barrier.

  performance.cpp:
	Fichier d'implémentation pour la classe Performance (classe fille de Option) représentant l'option performance.
  perfomance.h:
	Fichier header de la classe Performance.

  option.cpp:
	Fichier d'implémentation pour la classe Option représentant l'ensemble des attributs communs à toutes les options.
  option.h:
	Fichier header de la classe Option.

  bs.cpp:
	Fichier d'implémentation de la classe BS permetttant de construire un modèle de Black-Scholes pour modéliser l'évolution d'un sous-jacent.
  bs.h:
  Fichier header de la classe BS.

  montecarlo.cpp:
	Fichier d'implémentation de la classe MonteCarlo permettant d'approcher le prix de l'option et le delta à un instant t à l'aide de la moyenne Monte Carlo ainsi que de calculer l'erreur de couverture.
  montecarlo.h:
	Fichier header de la classe MonteCarlo.

  parser.cpp:
	Fichier d'implémentation de la classe Parser permettant la lecture du fichier d'entrée 
  parser.h
	Fichier header de la classe Parser
	
  typeval.cpp:
	Fichier d'implémentation de la structure des types utilisés dans le parser
  typeval.h
	Fichier header de la structure TypeVal
	
  pricer.cpp:
	Fichier d'implémentation pour calculer le prix de l'option à l'instant 0.
	L'exécutable est utilisé de la manière suivant:
	./pricer fichier_input

  pricert.cpp:
	Fichier d'implémentation pour calculer le prix de l'option à l'instant t.
	L'exécutable est utilisé de la manière suivant: 
	./pricert fichier_input t
	t doit être compris entre 0 et la maturité T. Il doit de plus correspondre à un pas de temps de discrétisation.

  couv.cpp:
	Fichier d'implémentation pour calculer l'erreur de couverture.
	L'exécutable est utilisé de la manière suivant:
	./couv fichier_input H h
	H correspond au nombre de dates pour la simulation du modèle sous la probabilité historique.
	h correspond au pas de différences finies.

  test-parser.cpp:
	Fichier d'implémentation pour vérifié que le lien entre le parseur et le priceur est correct, ie en ayant rempli les champs des classes nécessaires au pricer.
	L'exécutable est utilisé de la manière suivante:
	./test-parser fichier_input

  delta.cpp:
	Fichier d'impléentation pour calculer le delta à un instant t de l'option:
	L'exécutables est utilisé de la manière suivante:
	./delta fichier_input t h
	t doit être entre 0 et la maturité T. Il doit de plus correspondre à un pas de temps de discrétisation.
	h correspond au pas de différences finies.

  test_delta.sh:
	Script permettant d'effectuer la commande 
	./delta fichier_input 0.0 0.1 
	sur l'ensemble du jeu de données d'options contenus dans src/exemples.

  test_parser.sh:
	Script permettant d'effectuer la commande 
	./test-parser fichier_input
	sur l'ensemble du jeu de données d'options contenus dans src/exemples.

  test_pricer.sh:
	Script permettant d'effectuer la commande 
	./pricer fichier_input 0.0
	sur l'ensemble du jeu de données d'options contenus dans src/exemples.

src/donnee_graphique:
  Contient des graphes ainsi que des jeux de données pour représenter une partie de ce que le pricer est capable de faire.

src/exemples:
  Contient un jeu de données d'options.

